//------------------------------------------------------------
//             Setup Environment
//------------------------------------------------------------

PRECISION  1000
RESOLUTION 5

UNIT CAPACITANCE FF
UNIT LENGTH      U
UNIT RESISTANCE  OHM

MASK RESULTS DATABASE "mask.db"
FLAG OFFGRID YES
FLAG ACUTE YES
FLAG SKEW YES
FLAG NONSIMPLE YES
FLAG NONSIMPLE PATH YES

TEXT DEPTH PRIMARY

LAYOUT PROCESS BOX RECORD YES

//------------------------------------------------------------
//         Setup Defaults for LVS
//------------------------------------------------------------

MASK SVDB DIRECTORY svdb XCALIBRE

LVS REPORT                       "lvs.rep"
LVS REPORT OPTION                S
LVS POWER NAME                   VDD? DVDD VCC VDDA VDDB ADVDD VDDM
LVS GROUND NAME                  GND? DVSS VSS GROUND AGND DGND VSSM
LVS ABORT ON SUPPLY ERROR        NO
LVS ALL CAPACITOR PINS SWAPPABLE NO
LVS PIN NAME PROPERTY PHY_PIN    PIN
LVS COMPONENT SUBTYPE PROPERTY   LVS_SUBTYPE
LVS COMPONENT TYPE PROPERTY      LVS_TYPE
LVS FILTER UNUSED BIPOLAR        NO
LVS FILTER UNUSED MOS            NO
LVS FILTER UNUSED RESISTORS      NO
LVS FILTER UNUSED DIODES         NO
LVS FILTER UNUSED CAPACITORS     NO
LVS IGNORE PORTS                 NO
LVS RECOGNIZE GATES              NONE
LVS REDUCE PARALLEL BIPOLAR      NO
LVS REDUCE PARALLEL CAPACITORS   NO
LVS REDUCE SERIES   MOS          NO
LVS REDUCE SPLIT    GATES        NO
LVS REDUCE PARALLEL RESISTORS    NO
LVS REDUCE SERIES CAPACITORS     NO
LVS REDUCE SERIES RESISTORS      NO
LVS REPORT MAXIMUM               100
LVS PROPERTY RESOLUTION MAXIMUM  1000
LVS SPICE REPLICATE DEVICES      YES
LVS SPICE MULTIPLIER NAME       "M"
LVS INJECT LOGIC                 NO
LVS CHECK PORT NAMES             YES

LVS WRITE LAYOUT NETLIST         "netlistLAYOUT"
LVS WRITE SOURCE NETLIST         "netlistSOURCE"


//------------------------------------------------------------
//            INPUT-LAYERS
//------------------------------------------------------------
// LAYER : Defines the name of an original layer or a layer set that Calibre uses. 
//         LAYER name original_layer
// LAYER MAP: Enables Calibre to map layer numbers, DATATYPE attributes, and TEXTTYPE attributes in GDS and OASIS databases to layer numbers that Calibre uses in the rule file.
//        LAYER MAP source_layer DATATYPE/TEXTTYPE source_type target_layer 

LAYER MAP  13     DATATYPE  0 50130
LAYER poly_dg     50130                                                 // P1, Poly1
LAYER MAP  15     DATATYPE  0 50150     LAYER cont        50150         // CT, Contact
LAYER MAP   8     DATATYPE  0 50080     LAYER nimp        50080         // IN, N+ Implant
LAYER MAP   7     DATATYPE  0 50070     LAYER pimp        50070         // IP, P+ Implant
LAYER MAP  16     DATATYPE  0 50160
LAYER MAP  16     DATATYPE  9 50169
LAYER met1_dg     50160 50169                                           // M1, Metal1
LAYER MAP   2     DATATYPE  0 50020     LAYER nwell       50020         // NW, N-well
LAYER MAP   3     DATATYPE  0 50030
LAYER diff_dg     50030                                                 // DF, Active Area

//LVS TEXT LAYER
LAYER MAP   16    TEXTTYPE  3 50163		LAYER MET1_TEXT   50163
LAYER MAP   13    TEXTTYPE  3 50133		LAYER POLY1_TEXT  50133

// TEXT LAYER : Specifies the layers in the layout database from which text is read for connectivity extraction.
// PORT LAYER TEXT : Causes Port Layer Text objects on the specified layer(s) to be read and treated as top-level ports in geometric databases.
// ATTACH : attaches connectivity information from a layer1 object to a layer2 object. It is used for naming nets and ports.
//       ATTACH A B
//        where A is a Text Layer argument (or A is a layer set that contains the label layer), then
//        the connectivity extractor looks for a polygon on layer B that intersects the label
//        location. If found, the label name is assigned to the net that contains that polygon.

//TEXT LAYER      POLY1_TEXT MET1_TEXT 
PORT LAYER TEXT  MET1_TEXT POLY1_TEXT

ATTACH MET1_TEXT    m1trm
ATTACH POLY1_TEXT    p1trm

//............................................................................

met1 = copy met1_dg      // Metal1 definition
poly1 = copy poly_dg 
p1trm = copy poly1
diff = copy diff_dg
ntap = ndiff AND nwell 
m1trm = copy met1
ndiff = diff AND nimp
pdiff1 = (diff NOT poly1) AND pimp
pdiff = pdiff1 AND nwell
pdif2 = (diff AND pimp) AND nwell
nwtrm = copy nwell
pe = ((diff AND poly1) AND pimp) AND nwell

//------------------------------------------------------------
//            Layer Connections
//------------------------------------------------------------
CONNECT m1trm p1trm ndiff pdiff BY cont

SCONNECT ndiff nwtrm BY ntap

LVS SOFTCHK nwtrm CONTACT

//------------------------------------------------------------
//       Intentional devices definitions
//------------------------------------------------------------

DEVICE MP(pe)    pe    p1trm(G)   pdiff(S)   pdiff(D) nwtrm(B) <pdif2>  NETLIST ELEMENT XM CMACRO getParaMp pe


DMACRO getParaMp seed {[
property w,l,as,ad,ps,pd
  W = (perimeter_coincide(S, seed) + perimeter_coincide(D, seed))/2
  L = AREA(seed) / W

  AS = area(S)
  AD = area(D)
  PS = perimeter(S)
  PD = perimeter(D)

  if (AS > 0) {
  AS = area(S) * (perimeter_coincide(S, seed) / perimeter_inside(S, pdif2))
  PS = perimeter(S) * (perimeter_coincide(S, seed) / perimeter_inside(S, pdif2))
  }
  if (AD > 0) {
  AD = area(D) * (perimeter_coincide(D, seed) / perimeter_inside(D, pdif2))
  PD = perimeter(D) * (perimeter_coincide(D, seed) / perimeter_inside(D, pdif2))
  }
]}



